{"ast":null,"code":"var _jsxFileName = \"/Users/paulamibhattacharya/development/git-react/books/src/Search.js\";\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nexport default function Search() {\n  const [books, setbooks] = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      search: ''\n    },\n    onSubmit: async values => {\n      console.log(values);\n      const response = await fetch(\"http://127.0.0.1:5000/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n\n        if (json) {\n          setbooks(json.books);\n        }\n\n        console.log(json);\n        console.log(\"response worked!\");\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for book by title,author or isbn\",\n    name: \"search\",\n    id: \"search\",\n    onChange: formik.handleChange,\n    value: formik.values.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"TItle\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"AUTHOR\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"YEAR\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"ISBN\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, books => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"hii\") && books.map((book, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }, book.title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      }, book.author), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }\n      }, book.year), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }\n      }, book.isbn));\n    });\n  }))));\n}","map":{"version":3,"sources":["/Users/paulamibhattacharya/development/git-react/books/src/Search.js"],"names":["useFormik","React","useState","Search","books","setbooks","formik","initialValues","search","onSubmit","values","console","log","response","fetch","method","headers","body","JSON","stringify","ok","json","handleSubmit","handleChange","map","book","index","title","author","year","isbn"],"mappings":"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","sourcesContent":["import { useFormik } from 'formik'\nimport React, { useState } from 'react'\n\n\nexport default function Search() {\n    const [books, setbooks] = useState([])\n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },\n        onSubmit: async (values) => {\n            console.log(values)\n            const response = await fetch(\"http://127.0.0.1:5000/search\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(values)\n\n            })\n\n            if (response.ok) {\n                const json = await response.json();\n                if (json) {\n                    setbooks(json.books)\n                }\n                console.log(json)\n                console.log(\"response worked!\")\n\n\n            }\n        }\n    })\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for book by title,author or isbn\"\n                    name=\"search\"\n                    id=\"search\"\n                    onChange={formik.handleChange}\n                    value={formik.values.search}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n\n            <br />\n\n            <div className=\"table\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th>TItle</th>\n                        <th>AUTHOR</th>\n                        <th>YEAR</th>\n                        <th>ISBN</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {books  => {\n                        return (\n                            <div>hii</div> \n                            &&                           \n                            books.map((book, index) => {\n                                return (\n                                    <tr>\n                                        <td>{book.title}</td>\n                                        <td>{book.author}</td>\n                                        <td>{book.year}</td>\n                                        <td>{book.isbn}</td>\n                                    </tr>\n                                )\n                            })\n                        )\n                    }\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}