{"ast":null,"code":"var _jsxFileName = \"/Users/paulamibhattacharya/development/git-react/books/src/Search.js\";\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table'; // const bar = {\n//     marginTop:-500,\n//     marginLeft:450\n// }\n\nexport default function Search() {\n  const [books, setbooks] = useState([]);\n\n  function head() {\n    return /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, \"No.\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, \"ISBN\"))));\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      search: ''\n    },\n    onSubmit: async values => {\n      console.log(values);\n      const response = await fetch(\"http://127.0.0.1:5000/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n\n        if (json) {\n          setbooks(json.books);\n        }\n\n        console.log(json);\n        console.log(\"response worked!\");\n        return head;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for book by title,author or isbn\",\n    name: \"search\",\n    id: \"search\",\n    onChange: formik.handleChange,\n    value: formik.values.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, books && books.map((book, index) => {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, book.author), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, book.year), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, book.isbn)));\n  }))));\n}","map":{"version":3,"sources":["/Users/paulamibhattacharya/development/git-react/books/src/Search.js"],"names":["useFormik","React","useState","Table","Search","books","setbooks","head","formik","initialValues","search","onSubmit","values","console","log","response","fetch","method","headers","body","JSON","stringify","ok","json","handleSubmit","handleChange","map","book","index","title","author","year","isbn"],"mappings":"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","sourcesContent":["import { useFormik } from 'formik'\nimport React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Table from 'react-bootstrap/Table'\n\n\n// const bar = {\n//     marginTop:-500,\n//     marginLeft:450\n// }\n\nexport default function Search() {\n    const [books, setbooks] = useState([])\n    function head() {\n        return (\n            <Table striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>No.</th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Year</th>\n                        <th>ISBN</th>\n                    </tr>\n                </thead>\n            </Table>\n        )\n    }\n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },\n        onSubmit: async (values) => {\n            console.log(values)\n            const response = await fetch(\"http://127.0.0.1:5000/search\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(values)\n\n            })\n\n            if (response.ok) {\n                const json = await response.json();\n                if (json) {\n                    setbooks(json.books)\n                }\n                console.log(json)\n                console.log(\"response worked!\")\n                return head\n            }\n        }\n    })\n\n    return (\n        <div className=\"heading\">\n            <header className=\"body\">\n                {/* <div style={bar}> */}\n                <form onSubmit={formik.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search for book by title,author or isbn\"\n                        name=\"search\"\n                        id=\"search\"\n                        onChange={formik.handleChange}\n                        value={formik.values.search}\n                    />\n                    <button type=\"submit\">Search</button>\n                </form>\n                {/* </div> */}\n\n                <br />\n                <Table striped bordered hover variant=\"dark\">\n                    {/* <thead>\n                        <tr>\n                            <th>No.</th>\n                            <th>Title</th>\n                            <th>Author</th>\n                            <th>Year</th>\n                            <th>ISBN</th>\n                        </tr>\n                    </thead> */}\n                    {books && books.map((book, index) => {\n                        return (\n                            <tbody>\n                                <tr key={index}>\n                                    <td>{index + 1}</td>\n                                    <td>{book.title}</td>\n                                    <td>{book.author}</td>\n                                    <td>{book.year}</td>\n                                    <td>{book.isbn}</td>\n                                </tr>\n                            </tbody>\n                        )\n                    }\n                    )\n                    }\n                </Table>\n            </header>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}