{"ast":null,"code":"var _jsxFileName = \"/Users/paulamibhattacharya/development/git-react/books/src/Search.js\";\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nexport default function Search() {\n  const [book, setbook] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      search: ''\n    },\n    onSubmit: async function fetchAsync(values) {\n      console.log(values);\n      const response = await fetch(\"http://127.0.0.1:5000/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n        console.log(json);\n        console.log(\"response worked!\");\n      }\n    }\n  });\n  formik.onSubmit.fetchAsync(formik.values).then(json => setbook(json));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for book by title,author or isbn\",\n    name: \"search\",\n    id: \"search\",\n    onChange: formik.handleChange,\n    value: formik.values.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, book.json), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/Users/paulamibhattacharya/development/git-react/books/src/Search.js"],"names":["useFormik","React","useState","Search","book","setbook","formik","initialValues","search","onSubmit","fetchAsync","values","console","log","response","fetch","method","headers","body","JSON","stringify","ok","json","then","handleSubmit","handleChange"],"mappings":";AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMI,MAAM,GAAGN,SAAS,CAAC;AACrBO,IAAAA,aAAa,EAAE;AACXC,MAAAA,MAAM,EAAE;AADG,KADM;AAIrBC,IAAAA,QAAQ,EAAE,eAAeC,UAAf,CAA2BC,MAA3B,EAAmC;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFgD;AAKzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,MAAf;AALmD,OAAjC,CAA5B;;AASA,UAAIG,QAAQ,CAACO,EAAb,EAAiB;AACb,cAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAT,EAAnB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;AApBoB,GAAD,CAAxB;AAuBAP,EAAAA,MAAM,CAACG,QAAP,CAAgBC,UAAhB,CAA2BJ,MAAM,CAACK,MAAlC,EACKY,IADL,CACUD,IAAI,IAAIjB,OAAO,CAACiB,IAAD,CADzB;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEhB,MAAM,CAACkB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,yCAFhB;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,EAAE,EAAC,QAJP;AAKI,IAAA,QAAQ,EAAElB,MAAM,CAACmB,YALrB;AAMI,IAAA,KAAK,EAAEnB,MAAM,CAACK,MAAP,CAAcH,MANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACkB,IAAV,CATJ,eAUI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,CADJ,CADJ;AAgBH","sourcesContent":["import { useFormik } from 'formik'\nimport React, {useState} from 'react'\n\nexport default function Search() { \n    const [book, setbook] = useState(\"\")\n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },       \n        onSubmit: async function fetchAsync (values) {\n            console.log(values)\n            const response = await fetch(\"http://127.0.0.1:5000/search\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(values)\n\n            })\n\n            if (response.ok) {\n                const json = await response.json();\n                console.log(json)\n                console.log(\"response worked!\")\n            }\n        }           \n     })\n\n    formik.onSubmit.fetchAsync(formik.values)\n        .then(json => setbook(json))\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for book by title,author or isbn\"\n                    name=\"search\"\n                    id=\"search\"\n                    onChange={formik.handleChange}\n                    value={formik.values.search}\n                />\n                <h1>{book.json}</h1>\n                <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}