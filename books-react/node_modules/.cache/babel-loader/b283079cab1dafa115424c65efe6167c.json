{"ast":null,"code":"var _jsxFileName = \"/Users/paulamibhattacharya/development/git-react/books/src/Search.js\";\nimport { useFormik } from 'formik';\nimport React from 'react';\nexport default function Search() {\n  const formik = useFormik({\n    initialValues: {\n      search: ''\n    },\n    onSubmit: async values => {\n      console.log(values);\n      const response = await fetch(\"http://127.0.0.1:5000/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n        console.log(json);\n        console.log(\"response worked!\");\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for book by title,author or isbn\",\n    name: \"search\",\n    id: \"search\",\n    onChange: formik.handleChange,\n    value: formik.values.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, book), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"haha\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/Users/paulamibhattacharya/development/git-react/books/src/Search.js"],"names":["useFormik","React","Search","formik","initialValues","search","onSubmit","values","console","log","response","fetch","method","headers","body","JSON","stringify","ok","json","handleSubmit","handleChange","book"],"mappings":";AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAMC,MAAM,GAAGH,SAAS,CAAC;AACrBI,IAAAA,aAAa,EAAE;AACXC,MAAAA,MAAM,EAAE;AADG,KADM;AAIrBC,IAAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFgD;AAKzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,MAAf;AALmD,OAAjC,CAA5B;;AASA,UAAIG,QAAQ,CAACO,EAAb,EAAiB;AACb,cAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAT,EAAnB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;AApBoB,GAAD,CAAxB;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEU,YAAY,CAACb,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,yCAFhB;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,EAAE,EAAC,QAJP;AAKI,IAAA,QAAQ,EAAEH,MAAM,CAACiB,YALrB;AAMI,IAAA,KAAK,EAAEjB,MAAM,CAACI,MAAP,CAAcF,MANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKgB,IAAL,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CADJ,CADJ;AAiBH","sourcesContent":["import { useFormik } from 'formik'\nimport React from 'react'\n\nexport default function Search() { \n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },       \n        onSubmit: async (values) => {\n            console.log(values)\n            const response = await fetch(\"http://127.0.0.1:5000/search\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(values)\n\n            })\n\n            if (response.ok) {\n                const json = await response.json();\n                console.log(json)\n                console.log(\"response worked!\")\n            }\n        }            \n     })\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for book by title,author or isbn\"\n                    name=\"search\"\n                    id=\"search\"\n                    onChange={formik.handleChange}\n                    value={formik.values.search}\n                />\n                <h1>{book}</h1>\n                <h1>haha</h1>\n                <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}